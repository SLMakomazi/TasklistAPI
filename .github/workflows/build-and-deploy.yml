name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  APP_NAME: tasklist-api
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_IMAGE: ${{ github.repository }}/tasklist-api

# Required permissions for GitHub Actions
permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B package -DskipTests

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE }}:${{ github.sha }} .
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker

    - name: Stop and remove existing containers
      run: |
        docker stop tasklist-api tasklist-postgres || true
        docker rm tasklist-api tasklist-postgres || true

    - name: Start PostgreSQL
      run: |
        docker run -d --name tasklist-postgres \
          -e POSTGRES_DB=tasklist \
          -e POSTGRES_USER=${{ secrets.DB_USERNAME || 'postgres' }} \
          -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
          -p 5432:5432 \
          -v postgres_data:/var/lib/postgresql/data \
          postgres:16

    - name: Deploy application
      run: |
        docker run -d --name tasklist-api \
          -p 8080:8080 \
          -e SPRING_PROFILES_ACTIVE=prod \
          -e DB_HOST=host.docker.internal \
          -e DB_USERNAME=${{ secrets.DB_USERNAME || 'postgres' }} \
          -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE }}:${{ github.sha }}