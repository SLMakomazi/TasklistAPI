name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  APP_NAME: tasklist-api
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_IMAGE: ${{ github.repository }}/${{ env.APP_NAME }}

defaults:
  run:
    working-directory: ./

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Build with Maven
      run: mvn -B package -DskipTests
    
    - name: Run tests
      run: mvn test
    
    - name: Build Docker image
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE }}:${{ github.sha }} .
        docker tag ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE }}:${{ github.sha }} ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE }}:latest
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE }}:${{ github.sha }}
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE }}:latest
    
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}
        path: target/*.jar
        retention-days: 5

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download JAR artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.APP_NAME }}
    
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add known hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
    
    - name: Deploy to VM
      run: |
        chmod +x deployment/deploy-to-vm.sh
        ./deployment/deploy-to-vm.sh ${{ secrets.VM_HOST }} ${{ secrets.SSH_PRIVATE_KEY }} ${{ github.sha }}
